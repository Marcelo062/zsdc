#!/bin/bash
barra=$( echo -e "\e[0;36m======================================================\e[m" ) #55
#Direcciones
DIR="/home/VPS-ARG"
clientes=$( echo -e "${DIR}/clientes" )
DIR2="/etc/VPS-ARG/"
ini_auto="${DIR}/.ini_auto"
aux="${DIR}/.aux"
aux2="${DIR}/.aux2"
#Valores
cel=$( echo -e "\e[0;36m" )
ama=$( echo -e "\e[1;33m" )
roj=$( echo -e "\e[0;31m" )
ver=$( echo -e "\e[0;32m" )
nar=$( echo -e "\e[1;31m" )
fin=$( echo -e "\e[m" )


function espacio(){
fila=$1
col=$(( ( 55 - $2 )/2 ))
tput cup $fila $col
return
}

function espacio_l(){
tam=$( echo -n "$1" | wc -m )
fila=$2
col=$(( ( $3 - $tam )/2 ))
col=$(( $col + $4 ))
tput cup $fila $col
return
}

function titulo(){
clear
nl=$( echo -n "$1" | wc -m )
echo "$barra"
espacio 1 $nl
echo -e "${ama}$1${fin}"
echo "$barra"
return
}

function aviso(){
tput cuu1
tput civis
read -e -p "${cel}[!]${ama} $1${fin}" enter
tput cnorm
return
}

function aviso2(){
echo "$barra"
tput civis
read -e -p "${ama}Enter para continuar${fin}" enter
tput cnorm
return
}

function aviso3(){
tput civis
echo "$barra"
read -e -p "${ama}$1${fin}"
tput cnorm
return
}

function listar(){
valid=$( cat $clientes 2> /dev/null)
if [[ ! -z $valid ]]; then
	cont=1
	sort $clientes > $aux
	while IFS= read -r line
	do
		echo -e "${cel}[$cont] ${fin}-> ${ama}$line" | awk -F "|" '{print $1}'
		((cont++))
	done < $aux
else
	echo -e "${ama}0 Clientes registrados${fin}"
fi
echo -e "$barra"
echo -e "${cel}[0] ${fin}-> ${ama}Volver${fin}"
echo -e "$barra"
return
}

function buscar(){
cont=1
while IFS= read -r line
do
	if [[ $cont -eq $1 ]]; then
		info=$( echo -e "$line" )
		break
	fi
((cont++))
done < $aux
return
}

function add(){
titulo "Agregar Cliente"
while :
do
	tput cup 3 0 && tput el
	read -e -n 20 -p "${cel}Nombre del cliente${fin}: " nom
	verif=$( grep -w $nom $clientes)
	if [[ ! -z $verif ]]; then
		echo -e  "${cel}[!] ${ama}Nombre del cliente ya existe.${fin}"
	else
		break
	fi
done
tput cup 4 0 && tput el
read -e -n 10 -p "${cel}Fecha de vencimiento (02102005)${fin}: " fv
read -e -p "${cel}Pago (s|S/n|N)${fin}: " pago
echo "${nom}|${fv}|${pago}" >> $clientes
aviso3 "${ver}Ok ${fin}- ${ama}Clientes agregado con exito${fin}"
return
}

function edi2(){
titulo "Editar Cliente"
buscar "$1"
rem=$( grep -vw "$info" "$clientes" 2> /dev/null )
nombre=$( echo -e "$info" | awk -F "|" '{print $1}' )
echo -e "${cel}Cliente seleccionado${fin}: ${ama}${nombre}${fin}"
read -e -n 10 -p "${cel}Nueva fecha de vencimiento (02102005)${fin}: " fv
read -e -p "${cel}Pago (s|S/n|N)${fin}: " pago
echo -e "${nombre}|${fv}|${pago}" > $clientes
if [[ ! -z $rem ]]; then
	echo -e "${rem}" >> $clientes
fi
aviso3 "${ver}Ok ${fin}- ${ama}Cliente editado con exito${fin}"
return
}

function edi(){
while :
do
	titulo "Editar Cliente"
	listar
	read -e -p "${cel}Opcion${fin}: " op
	contt=$(( $cont - 1 ))
	if [[ $op -ge 1 && $op -le $contt && ! $contt -eq 0 ]]; then
		edi2 "$op"
		break
	elif [[ $op -eq 0 ]]; then
		break
	else
		aviso "Opcion Invalida"
	fi
done
return
}

function eli(){
while :
do
	titulo "Eliminar Cliente"
        listar
        read -e -p "${cel}Opcion${fin}: " op
        contt=$(( $cont - 1 ))
        if [[ $op -ge 1 && $op -le $contt && ! $contt -eq 0 ]]; then
                buscar $op
		rem=$( grep -vw "$info" "$clientes" 2> /dev/null )
		if [[ ! -z $rem ]]; then
			echo -e "${rem}" > $clientes
		else
			rm -r $clientes
		fi
		tput cuu1 && tput el
		tput cuu1 && tput el
		aviso3 "${ver}Ok ${fin}- ${ama}Cliente eliminado con exito${fin}"
		break
        elif [[ $op -eq 0 ]]; then
                break
        else
                aviso "Opcion Invalida"
        fi
done
return
}

function reg(){
while :
do
	titulo "Registrar Pago"
        listar
        read -e -p "${cel}Opcion${fin}: " op
        contt=$(( $cont - 1 ))
        if [[ $op -ge 1 && $op -le $contt && ! $contt -eq 0 ]]; then
                buscar $op
		rem=$( grep -vw "$info" "$clientes" 2> /dev/null )
		nom=$( echo -e "$info" | awk -F "|" '{print $1}' )
		fv=$( echo -e "$info" | awk -F "|" '{print $2}' )
		echo -e "${nom}|${fv}|s" > $clientes
		if [[ ! -z $rem ]]; then
			echo -e "${rem}" >> $clientes
		fi
		tput cuu1 && tput el
		tput cuu1 && tput el
		aviso3 "${ver}Ok ${fin}- ${ama}Pago registrado${fin}"
		break
        elif [[ $op -eq 0 ]]; then
                break
        else
                aviso "Opcion Invalida"
        fi
done
return
}

function vp(){
rp=$( echo -e "$line" | awk -F "|" '{print $3}' )
if [[ $rp == "S" || $rp == "s" ]]; then
	estado=$( echo -e "${ver}Pagado${fin}" )
else
	estado=$( echo -e "${nar}NoPagado${fin}" )
fi
return
}

function ver(){
titulo "Listar Clientes"
espacio_l "$Cliente" 3 20 0
echo -e "${ama}Cliente"
espacio_l "Fecha de Venc." 3 14 22
echo -e "Fecha de Venc."
espacio_l "Detalles" 3 8 38
echo -e "Detalles${fin}"
echo -e "${cel}----------------------------------------------"
{
sort $clientes > $aux
} &> /dev/null
valid=$( cat $clientes 2> /dev/null)
if [[ ! -z $valid ]]; then
	linea=5
	rest=5
	while IFS= read -r line
	do
		echo -e "${ama}$line" | awk -F "|" '{print $1}'
		espacio_l "Fecha de Venc." $linea 16 22
		fecha=$( echo -e "$line" | awk -F "|" '{print $2}' )
		echo -e "${fecha:0:2}/${fecha:2:2}/${fecha:4}"
		espacio_l "Detalles" $linea 8 38
		vp
		echo -e "$estado"
		((linea++))
	done < $aux
else
	echo -e "${ama}0 Clientes registrados${fin}"
	rest=0
fi
echo -e "$barra"
echo -e "${cel}NÂ° Clientes${fin}: ${ama}$(( $linea - $rest ))"
aviso3 "Enter para continuar"
return
}

function admp(){
titulo "Administrar Pagos"
echo -e "${cel}[1] ${fin}-> ${ama}Agregar cliente${fin}"
echo -e "${cel}[2] ${fin}-> ${ama}Editar cliente${fin}"
echo -e "${cel}[3] ${fin}-> ${ama}Eliminar cliente${fin}"
echo -e "${cel}[4] ${fin}-> ${ama}Registrar pago${fin}"
echo -e "${cel}[5] ${fin}-> ${ama}Listar clientes${fin}"
echo -e "$barra"
echo -e "${cel}[0] ${fin}-> ${ama}Volver${fin}"
echo -e "$barra"
read -e -p "${cel}Opcion${fin}: " op
case $op in
1)add;;
2)edi;;
3)eli;;
4)reg;;
5)ver;;
0)exit;;
*)aviso "Opcion Invalida";;
esac
return
}

while :
do
admp
done

exit
