#!/bin/bash
barra=$( echo -e "\e[0;36m======================================================\e[m" ) #55
#Direcciones
DIR="/home/VPS-ARG"
DIR2="/usr/local/etc/VPS-ARG/"
ini_auto="${DIR}/.ini_auto"
aux="${DIR}/.aux"
aux2="${DIR}/.aux2"
#Valores
cel=$( echo -e "\e[0;36m" )
ama=$( echo -e "\e[1;33m" )
roj=$( echo -e "\e[0;31m" )
ver=$( echo -e "\e[0;32m" )
fin=$( echo -e "\e[m" )

function desconectar(){
nd=$1
data=( `ps aux | grep -i dropbear | awk '{print $2}'`);

for PID in "${data[@]}"
do
        NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
        USER=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $10}'`;
        IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $12}'`;
        if [ $NUM -eq 1 ]; then
        USER=$( echo -e "${USER:1}" )
        USER=`echo "$USER" | sed 's/.$//g'`
                if [[ "$USER" == "$nd" ]]; then
                kill $PID
                fi
        fi
done

data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);

for PID in "${data[@]}"
do
        NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
        USER=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
        IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
	if [ $NUM -eq 1 ]; then
                if [[ $USER == $nd ]]; then
                kill $PID
                fi
        fi
done
}


function espacio(){
fila=$1
col=$(( ( 55 - $2 )/2 ))
tput cup $fila $col
return
}

function espacio_l(){
tam=$( echo -n "$1" | wc -m )
fila=$2
col=$(( ( $3 - $tam )/2 ))
col=$(( $col + $4 ))
tput cup $fila $col
return
}

function titulo(){
clear
nl=$( echo -n "$1" | wc -m )
echo "$barra"
espacio 1 $nl
echo -e "${ama}${1}${fin}"
echo "$barra"
return
}

function aviso(){
tput cuu1
tput civis
read -e -p "${cel}[!] ${ama}${1}${fin}" enter
tput cnorm
return
}

function aviso2(){
echo "$barra"
tput civis
read -e -p "${ama}Enter para continuar${fin}" enter
tput cnorm
return
}

function aviso3(){
tput civis
echo "$barra"
read -e -p "${ama}${1}${fin}" enter
tput cnorm
return
}

function listar_u(){
rm -r $aux &> /dev/null
cont=1
sort /etc/passwd > $aux2
while IFS= read -r line
do
	if [[ $( echo "$line" | awk -F ":" '{print $3}' ) -ge 1000 &&  $( echo "$line" | awk -F ":" '{print $3}' ) -le 2000 ]]; then
	echo -e "${cel}[$cont] ${fin}-> ${ama}$line${fin}" | awk -F ":" '{print $1}'
	num=$( echo -e "${line}" | awk -F ":" '{print $3}' )
	echo -e "$cont|$num" >> $aux
	((cont++))
	fi
done < $aux2
if [[ $cont -eq 1 ]]; then
echo -e "${ama}0 usuarios registrados${ama}"
aviso2
else
echo -e "$barra"
echo -e "${cel}[0] ${fin}-> ${ama}Cancelar${fin}"
echo -e "$barra"
fi
return
}

function estado(){
nombre=$( echo -e "$1" | awk -F ":" '{print $1}' )
verif=$( grep -w $nombre ${DIR}/bloq 2> /dev/null )
if [[ -z $verif ]]; then
est="${roj}Desbloqueado${ama}"
else
est="${ver}Bloqueado${ama}"
fi
return
}

function estado2(){
verif=$( grep -w "$1" ${DIR}/controles )
if [[ -z $verif ]]; then
std="${roj}OFF${ama}"
else
std="${ver}ON${ama}"
fi
}

function listar2_u(){
rm -r $aux &> /dev/null
cont=1
sort /etc/passwd > $aux2
while IFS= read -r line
do
        if [[ $( echo "$line" | awk -F ":" '{print $3}' ) -ge 1000 &&  $( echo "$line" | awk -F ":" '{print $3}' ) -le 2000 ]]; then
        estado "$line"
	echo -e "${cel}[$cont] ${fin}-> ${ama}$nombre [$est]${fin}" | awk -F ":" '{print $1}'
        num=$( echo -e "${line}" | awk -F ":" '{print $3}' )
        echo -e "$cont|$num" >> $aux
        ((cont++))
        fi
done < $aux2
if [[ $cont -eq 1 ]]; then
echo -e "${ama}0 usuarios registrados${fin}"
aviso2
else
echo -e "$barra"
echo -e "${cel}[0] ${fin}-> ${ama}Cancelar${fin}"
echo -e "$barra"
fi
return
}

function buscar(){
num=$( grep -w $1 $aux | awk -F "|" '{print $2}' )
nombre=$( grep -w $num /etc/passwd | awk -F ":" '{print $1}')
return
}

function info_u(){
info="NULL--0"
nombres=$( cat ${DIR}/usuarios | awk -F "|" '{print $1}')
echo -e "$nombres" > $aux
lineaa=$( grep -n -w $1 $aux | awk -F ":" '{print $1}')
{
if [[ $lineaa -ge 1 ]]; then
info=$( sed -n ${lineaa}p ${DIR}/usuarios 2> /dev/null )
fi
} &> /dev/null
rm -r $aux &> /dev/null
return
}

function crear_u(){
titulo "Crear Usuario"
while :
do
tput cup 3 0 && tput el
read -e -n 20 -p "${cel}Nombre del usuario${fin}: " nombre
$( cat /etc/passwd | awk -F ":" '{print $1}' ) > $aux
valid=$( grep -i -w "$nombre" $aux )
	if [[ ! -z $valid ]]; then
	echo -e "${cel}[!] ${ama}Nombre de usuario ya existe${fin}"
	else
	break
	fi
done
tput dl1
while :
do
tput cup 4 0 && tput el
read -e -n 12 -p "${cel}Contraseña${fin}: " contrasena
	if [[ $( echo -n $contrasena | wc -m ) -le 4 ]]; then
	echo -e "${cel}[!] ${ama}Contraseña muy corta (min. 5)${fin}"
	else
	break
	fi
done
tput dl1
read -e -n 3 -p "${cel}Tiempo de duracion${fin}: " tiempo
read -e -n 3 -p "${cel}Limite de conexion${fin}: " limite
FECHA=$( date -d "$tiempo days" +"%Y-%m-%d" )
FECHA2=$( date -d "$tiempo days" +"%d%m%Y" )
sudo useradd -M $nombre -s /bin/false -e $FECHA &> /dev/null
( echo "$contrasena" ; echo "$contrasena" ) | sudo passwd $nombre  &> /dev/null
sudo chage -m $tiempo -M $tiempo $nombre &> /dev/null
echo -e "$nombre|$contrasena|$limite|$FECHA2" >> ${DIR}/usuarios
tput cuu1 && tput cuu1 && tput cuu1 && tput cuu1 && tput dl1
echo -e "${cel}Nombre del usuario${fin}: ${ama}$nombre${fin}"
echo -e "${cel}Contraseña del usuario${fin}: ${ama}$contrasena${fin}"
echo -e "${cel}Fecha de vencimiento${fin}: ${ama}${FECHA2:0:2}-${FECHA2:2:2}-${FECHA2:4:4}${fin}"
echo -e "${cel}Limite de conexion${fin}: ${ama}$limite${fin}"
aviso3 "${ver}OK ${fin}- ${ama}Usuario Creado${fin}"
rm $aux
return
}

function edit(){
nombre=$1
titulo "Editar Usuario"
echo -e "${cel}Usuario seleccionado${fin}: ${ama}$nombre${fin}"
while :
do
tput cup 4 0 && tput el
read -e -n 12 -p "${cel}Nueva contraseña${fin}: " contrasena
        if [[ $( echo -n $contrasena | wc -m ) -le 4 ]]; then
        echo -e "${cel}[!] ${ama}Contraseña muy corta (min. 5)${fin}"
        else
        break
        fi
done
tput dl1
read -e -n 3 -p "${cel}Nuevo tiempo de duracion${fin}: " tiempo
read -e -n 2 -p "${cel}Nuevo limite de conexion${fin}: " limite
FECHA=$( date -d "$tiempo days" +"%Y-%m-%d" )
FECHA2=$( date -d "$tiempo days" +"%d%m%Y" )
FECHA3=$( date +"%Y-%m-%d" )
info_u "$nombre"
rem=$( grep -vw "$info" ${DIR}/usuarios )
echo -e "$rem" > ${DIR}/usuarios
echo -e "$nombre|$contrasena|$limite|$FECHA2" >> ${DIR}/usuarios
sudo chage -E $FECHA $nombre &> /dev/null
sudo chage -d $FECHA3 $nombre &> /dev/null
sudo chage -m $tiempo -M $tiempo $nombre &> /dev/null
( echo "$contrasena" ; echo "$contrasena" ) | sudo passwd $1 &> /dev/null
return
}

function edit_u(){
while :
do
titulo "Editar Usuario"
listar_u
	if [[ ! $cont -eq 1 ]]; then
	read -e -p "${cel}Opcion${fin}: " op
	contt=$(( $cont - 1))
                if [[ $op -ge 1 && $op -le $contt ]]; then
                buscar "$op"
                edit "$nombre"
                rm -r $aux &> /dev/null
                aviso3 "${ver}OK ${fin}- ${ama}Usuario Editado${fin}"
                break
                elif [[ $op -eq 0 ]]; then
                rm -r $aux &> /dev/null
                break
                else
                aviso "${ama}Opcion invalida${fin}"
                fi
	else
	break
	fi
done
return
}

function bloq_u(){
while :
do
titulo "Bloquear/Desbloquear Usuario"
listar2_u
	if [[ ! $cont -eq 1 ]]; then
	read -e -p "${cel}Opcion${fin}: " op
        contt=$(( $cont - 1 ))
                if [[ $op -ge 1 && $op -le $contt ]]; then
                buscar "$op"
                bloq=$( grep -w $nombre ${DIR}/bloq 2> /dev/null )
                        if [[ -z $bloq ]]; then
                        sudo usermod -L $nombre
                        echo "$nombre" >> ${DIR}/bloq
                        desconectar $nombre
			aviso3 "${ver}OK ${fin}- ${ama}Usuario Bloqueado${fin} "
                        else
                        sudo usermod -U $nombre
                        rem=$( grep -vw $nombre ${DIR}/bloq )
                        echo "$rem" > ${DIR}/bloq
                        aviso3 "${ver}OK ${fin}- ${ama}Usuario Desbloqueado${fin} "
                        fi
                break
                elif [[ $op -eq 0 ]]; then
                rm -r $aux &> /dev/null
                break
                else
                aviso "${ama}Opcion invalida${fin}"
                fi
	else
	break
	fi
done
return
}

function reno_u(){
while :
do
titulo "Renovar Usuario"
listar_u
        if [[ ! $cont -eq 1 ]]; then
        read -e -p "${cel}Opcion${fin}: " op
        contt=$(( $cont - 1 ))
		if [[ $op -ge 1 && $op -le $contt ]]; then
                buscar "$op"
		tput cuu1 && tput dl1
		echo -e "${cel}Usuario seleccionado${fin}: ${ama}$nombre${fin}"
		read -e -n 3 -p "${cel}Nuevo tiempo de duracion${fin}: " tiempo
		{
			if [[ $( grep -w $nombre ${DIR}/bloq ) ]]; then
			( echo "$op" ; echo "" ) | bloq_u
			fi
		} &> /dev/null
		FECHA=$( date -d "$tiempo days" +"%Y-%m-%d" )
		FECHA2=$( date -d "$tiempo days" +"%d%m%Y" )
		FECHA3=$( date +"%Y-%m-%d" )
		sudo chage -d $FECHA3 $nombre &> /dev/null
		sudo chage -E $FECHA $nombre &> /dev/null
		sudo chage -m $tiempo -M $tiempo $nombre &> /dev/null
                info_u "$nombre"
                rem=$( grep -vw "$info" ${DIR}/usuarios )
                echo -e "$rem" > ${DIR}/usuarios
		contrasena=$( echo -e "$info" | awk -F "|" '{print $2}' )
		limite=$( echo -e "$info" | awk -F "|" '{print $3}' )
		echo -e "$nombre|$contrasena|$limite|$FECHA2" >> ${DIR}/usuarios
                rm -r $aux &> /dev/null
                aviso3 "${ver}OK${fin} - ${ama}Usuario Renovado${fin}"
                break
	        elif [[ $op -eq 0 ]]; then
	        rm -r $aux &> /dev/null
	        break
		else
		aviso "${ama}Opcion invalida${fin}"
		fi
	else
	break
	fi
done
return
}

function elim_u(){
while :
do
titulo "Eliminar Usuario"
listar_u
	if [[ ! $cont -eq 1 ]]; then
	read -e -p "${cel}Opcion${fin}: " op
	contt=$(( $cont - 1 ))
		if [[ $op -ge 1 && $op -le $contt ]]; then
                buscar "$op"
                info_u "$nombre"
                rem=$( grep -vw "$info" ${DIR}/usuarios )
                echo -e "$rem" > ${DIR}/usuarios
                sudo userdel -f $nombre -r &> /dev/null
                rm -r $aux &> /dev/null
		desconectar $nombre
                aviso3 "${ver}OK ${fin}- ${ama}Usuario Eliminado${fin}"
                break
		elif [[ $op -eq 0 ]]; then
                rm -r $aux &> /dev/null
                break
		else
		aviso "${ama}Opcion invalida${fin}"
		fi
	else
	break
	fi
done
return
}

function det_u(){
titulo "Detalles de todos los Usuarios"
listar_u 2> /dev/null
titulo "Detalles de todos los Usuarios"
rm -r $aux &> /dev/null
rm -r $aux2 &> /dev/null
if [[ ! $cont -eq 1 ]]; then
espacio_l "NOMBRE" 3 20 0
echo -e "${ama}NOMBRE"
espacio_l "CONTRASENA" 3 12 20
echo -e "CONTRASEÑA"
espacio_l "FECHA" 3 10 36
echo -e "FECHA"
tput cup 3 47
echo -e "LIMITE${fin}"
echo -e "${cel}-----------------------------------------------------${ama}"
linea=5
sort /etc/passwd > $aux2
	while IFS= read -r line
	do
	        if [[ $( echo "$line" | awk -F ":" '{print $3}' ) -ge 1000 &&  $( echo "$line" | awk -F ":" '{print $3}' ) -le 2000 ]]; then
		nombre=$( echo -e "$line" |  awk -F ":" '{print $1}' )
		info_u "$nombre"
			if [[ ! $info = "NULL--0" ]]; then
			tput cup $linea 0
			echo -e "$info" | awk -F "|" '{print $1}'
			tput cup $linea 22
			echo -e "$info" | awk -F "|" '{print $2}'
			tput cup $linea 36
			fecha=$( echo -e "$info" | awk -F "|" '{print $4}' )
			echo -e "${fecha:0:2}-${fecha:2:2}-${fecha:4:4}"
			lim=$( echo -e "$info" | awk -F "|" '{print $3}' )
			espacio_l "$lim" $linea 6 47
			echo -e "$lim"
		        ((linea++))
			else
			tput cup $linea 0
                        echo -e "$nombre" | awk -F "|" '{print $1}'
			espacio_l "??" $linea 12 22
                        echo -e "??"
                        espacio_l "FECHA" $linea 10 36
                        echo -e "??"
                        espacio_l "??" $linea 6 47
                        echo -e "??"
                        ((linea++))
			fi
	        fi
	done < $aux2
echo -e "$barra"
echo -e "${cel}Usuarios${fin}: ${ama}$(( $linea - 5 ))${fin}"
rm -r $aux &> /dev/null
rm -r $aux2 &> /dev/null
aviso2
fi
return
}

function lim_u(){
titulo " Limitador de Cuentas"
if [[ ! -f $DIR/.tlim ]]; then
echo -e "${cel}    ¿Cada cuantos segundos ejecutar el limitador?
  +Segundos ${fin}=${ama} -Uso de CPU ${fin}| ${cel}-Segundos ${fin}=${ama} +Uso de CPU
                ${cel}Predeterminado${fin}:${ama} 300s
     ${cel}Cuantos Segundos (Numeros Unicamente)${fin}: "
tput cup 6 44
read -e seg
	if [[ -z $seg ]]; then
	seg=300
	fi
echo -e $seg > $DIR/.tlim
cd ${DIR2}
screen -dmS lim ./lim
echo -e "lim|1" >> ${DIR}/controles
aviso3 "${ver}OK${fin} - ${ama}Limitador activado${fin}"
else
rm -r ${DIR}/.tlim &> /dev/null
PID=$( screen -ls | grep -w "lim" | awk '{print $1}' | awk -F "." '{print $1}')
kill $PID &> /dev/null
rem=$( grep -vw "lim" ${DIR}/controles )
echo -e "$rem" > ${DIR}/controles
tput cuu1 & tput el1
aviso3 "${ver}OK${fin} - ${ama}Limitador desactivado${fin}"
fi
return
}

function reg_lim(){
titulo "Registro de Limitados"
if [[ -f ${DIR}/limitados ]]; then
	espacio_l "Usuario" 3 20 0
	echo -e "${ama}Usuario"
	espacio_l "Conex/Lim" 3 3 22
	echo -e "Conex/Lim"
	espacio_l "Fecha - Hora" 3 18 34
	echo -e "Fecha - Hora${cel}"
	echo -e "---------------------------------------------------${ama}"
	linea=5
	while IFS= read -r line
	do
	echo -e "$line" | awk -F "|" '{print $1}'
	espacio_l "C/L" $linea 3 22
	echo -e "$line" | awk -F "|" '{print $2}'
	espacio_l "00/00/0000 - 00:00" $linea 18 32
	echo -e "$line" | awk -F "|" '{print $4}'
	((linea++))
	done < ${DIR}/limitados
else
	echo -e "${ama}No hay registros${fin}"
fi
aviso2
return
}

function limitador(){
while :
do
	titulo "Administrar Limitador"
	estado2 "lim"
	echo -e "${cel}[1] ${fin}-> ${ama}Limitador de cuentas [$std]"
	echo -e "${cel}[2] ${fin}-> ${ama}Registro de limitados"
	echo -e "${cel}[3] ${fin}-> ${ama}Borrar registro de limitados"
	echo -e "$barra"
	echo -e "${cel}[0] ${fin}-> ${ama}Volver"
	echo -e "$barra"
	read -e -p "${cel}Opcion${fin}: " op
	case $op in
	1)lim_u;;
	2)reg_lim;;
	3)
	rm -r ${DIR}/limitados
	tput cuu1 && tput el
	echo -e "${ver}OK${fin} - ${ama}Registros borrados${fin}"
	;;
	0)break;;
	*)aviso "Opcion invalida";;
	esac
done
return
}

function menu (){
titulo "Administrar Usuarios"
echo -e "${cel}[1] ${fin}-> ${ama}Crear nuevo usuario"
echo -e "${cel}[2] ${fin}-> ${ama}Editar usuario"
echo -e "${cel}[3] ${fin}-> ${ama}Bloquear/Desbloquear usuario"
echo -e "${cel}[4] ${fin}-> ${ama}Renovar usuario"
echo -e "${cel}[5] ${fin}-> ${ama}Eliminar usuario"
echo -e "${cel}[6] ${fin}-> ${ama}Detalles de todos los usuarios"
echo -e "${cel}[7] ${fin}-> ${ama}Monitor de conexiones"
echo -e "${cel}[8] ${fin}-> ${ama}Administrar limitador"
echo -e "$barra"
echo -e "${cel}[0] ${fin}-> ${ama}Volver"
echo -e "$barra"
read -e -p "${cel}Opcion${fin}: " op
case $op in
1)crear_u;;
2)edit_u;;
3)bloq_u;;
4)reno_u;;
5)elim_u;;
6)det_u;;
7)cd ${DIR2}
sudo ./mon;;
8)limitador;;
0)exit;;
*)aviso "Opcion invalida";;
esac
return
}

while :
do
menu
done
